steps:
  # Step 1: Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/projek-akhir", "."]
    dir: "be"

  # Step 2: Push image ke Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/projek-akhir"]

  # Step 3: Deploy ke Cloud Run menggunakan env.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "projek-akhir",
        "--image",
        "gcr.io/$PROJECT_ID/projek-akhir",
        "--timeout",
        "360s",
        "--port",
        "5000",
        "--region",
        "us-central1",
        "--allow-unauthenticated",
        "--set-env-vars",
        "ACCESS_TOKEN_SECRET=${_ACCESS_TOKEN_SECRET},REFRESH_TOKEN_SECRET=${_REFRESH_TOKEN_SECRET},DB_HOST=${_DB_HOST},DB_NAME=${_DB_NAME},DB_USERNAME=${_DB_USERNAME},PG_DB_HOST=${_PG_DB_HOST},PG_DB_NAME=${_PG_DB_NAME},PG_DB_USERNAME=${_PG_DB_USERNAME},DB_PASSWORD=${_DB_PASSWORD},PG_DB_PASSWORD=${_PG_DB_PASSWORD}",
      ]

  # Step 4: Set IAM policy untuk mengizinkan akses publik
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "services",
        "add-iam-policy-binding",
        "projek-akhir",
        "--region=us-central1",
        "--member=allUsers",
        "--role=roles/run.invoker",
      ]

options:
  logging: CLOUD_LOGGING_ONLY
